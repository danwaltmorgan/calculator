{"version":3,"sources":["data.js","numbers.js","operations.js","index.js"],"names":["numbers","id","value","operations","Numbers","handleClick","number","props","update","buttons","map","num","className","key","onClick","bind","React","Component","Operations","op","this","handleOperation","App","handleData","data","state","total","includes","setState","toString","operation","output","handleEquals","regex","negNum","negReg","test","index","match","split","splice","join","console","log","eval","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c72c1a6.chunk.js","sourcesContent":["const numbers = [\r\n  {id: \"nine\", value: 9},\r\n  {id: \"eight\", value: 8},\r\n  {id: \"seven\", value: 7},\r\n  {id: \"six\", value: 6},\r\n  {id: \"five\", value: 5},\r\n  {id: \"four\", value: 4},\r\n  {id: \"three\", value: 3},\r\n  {id: \"two\", value: 2},\r\n  {id: \"one\", value: 1},\r\n  {id: \"zero\", value: 0},\r\n  {id: \"decimal\", value: \".\"}\r\n]\r\n\r\nconst operations = [\r\n  {id: \"clear\", value: \"CE\"},\r\n  {id: \"add\", value: \"+\"},\r\n  {id: \"subtract\", value: \"-\"},\r\n  {id: \"multiply\", value: \"*\"},\r\n  {id: \"divide\", value: \"/\"},\r\n  {id: \"equals\", value: \"=\"}\r\n]\r\n\r\nexport { numbers, operations, }\r\n","import React from 'react';\r\nimport { numbers } from './data.js'\r\n\r\nclass Numbers extends React.Component {\r\n\r\n  handleClick = (number) => {\r\n    this.props.update(number)\r\n  }\r\n\r\n  render() {\r\n    const buttons = numbers.map(num => {\r\n      return <button\r\n        className=\"numBut\"\r\n        id={num.id}\r\n        key={num.id}\r\n        onClick={this.handleClick.bind(this, num.value)}\r\n        >\r\n        {num.value}\r\n      </button>\r\n    })\r\n\r\n\r\n    return (\r\n      <div id=\"wrapper\">\r\n        <div className=\"row\">\r\n          {buttons[0]}\r\n          {buttons[1]}\r\n          {buttons[2]}\r\n        </div>\r\n        <div className=\"row\">\r\n          {buttons[3]}\r\n          {buttons[4]}\r\n          {buttons[5]}\r\n        </div><div className=\"row\">\r\n          {buttons[6]}\r\n          {buttons[7]}\r\n          {buttons[8]}\r\n        </div><div className=\"row\">\r\n          {buttons[9]}\r\n          {buttons[10]}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Numbers\r\n","import React from 'react';\r\nimport { operations } from './data'\r\n\r\nclass Operations extends React.Component {\r\n\r\n  handleOperation(op) {\r\n    this.props.update(op)\r\n  }\r\n\r\n  render() {\r\n    let buttons = operations.map(op => {\r\n      return <button\r\n        id={op.id}\r\n        key={op.id}\r\n        className=\"opBut\"\r\n        onClick={this.handleOperation.bind(this, op.value)}>\r\n        {op.value}\r\n      </button>\r\n    })\r\n    return (\r\n      <div id=\"operations\">\r\n        {buttons}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Operations\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Numbers from './numbers'\r\nimport Operations from './operations'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      operation: \"\",\r\n      total: \"0\"\r\n    }\r\n  }\r\n\r\n  handleData = (data) => {\r\n    if (data === \".\" && this.state.total.includes(\".\")) {\r\n      return;\r\n    }\r\n    if (this.state.total == \"0\" && data != \".\"){\r\n      this.setState({total : data.toString(), operation: data.toString()})\r\n    }\r\n    else {\r\n      this.setState({\r\n        total: this.state.total + data.toString(),\r\n        operation: this.state.operation + data.toString()\r\n      })\r\n    }\r\n  }\r\n\r\n  handleOperation = (op) => {\r\n    let output = this.state.operation + op\r\n    if (op === \"CE\") {\r\n      output = \"0\";\r\n      op = \"0\"\r\n    }\r\n    if (op === \"=\") {\r\n      this.handleEquals()\r\n      return;\r\n    }\r\n    this.setState({\r\n      total: op,\r\n      operation: output\r\n    })\r\n  }\r\n\r\n  handleEquals() {\r\n    let total = this.state.operation;\r\n    let regex = /[\\+|\\*|\\/|\\-]{2,}/\r\n    let negNum = /(\\-\\d)/\r\n    let negReg = /[\\+|\\*|\\/]{2,}/\r\n    // console.log(negNum.test(total))\r\n    // console.log(total.match(regex))\r\n    if (!negNum.test(total)) {\r\n      while(regex.test(total)) {\r\n        let index = total.match(regex).index\r\n        total = total.split(\"\")\r\n        total.splice(index, 1)\r\n        total = total.join(\"\")\r\n      }\r\n    } else {\r\n      while(negReg.test(total)) {\r\n        let index = total.match(negReg).index\r\n        total = total.split(\"\")\r\n        total.splice(index, 1)\r\n        total = total.join(\"\")\r\n      }\r\n    }\r\n    console.log(total)\r\n    total = eval(total)\r\n    this.setState({\r\n      total: total,\r\n      operation: total\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"caculator\">\r\n        <div id=\"output\">\r\n          {this.state.operation} <br />\r\n        </div>\r\n        <div id=\"display\">\r\n          {this.state.total}</div>\r\n        <div id=\"button-wrapper\">\r\n          <Numbers update={this.handleData} />\r\n          <Operations update={this.handleOperation} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}